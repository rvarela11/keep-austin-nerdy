{"version":3,"sources":["components/Header/Header.scss","utiles/routes.js","components/Header/Header.js","components/shared/pages/Page.js","components/shared/links/HomeLink/HomeLink.js","components/shared/card/Card.js","utiles/formHelpers.js","components/shared/form/FormFields/FormFields.js","components/shared/form/Form/form.js","store/actions/index.js","store/actions/actionTypes.js","utiles/helpers.js","store/actions/form/form.js","store/actions/quiz/quiz.js","containers/Form/Form.js","components/shared/pages/Home/Home.js","components/quiz/Question/Question.js","components/quiz/Answer/Answer.js","components/quiz/Quiz/Quiz.js","containers/Quiz/Quiz.js","components/shared/pages/Quiz/Quiz.js","components/Results/Results.js","containers/Results/Results.js","components/shared/pages/Results/Results.js","components/shared/pages/NotFound/NotFound.js","components/App/App.js","store/reducers/form/form.js","store/reducers/quiz/quiz.js","store/reducers/index.js","index.js"],"names":["module","exports","black","white","midGray","darkPurple","purple","lightGreen","lightMidGreen","lightDarkGreen","lightRed","lightBlue","lightPurple","lightAqua","QUIZ_ROUTE","RESULTS_ROUTE","Header","react_default","a","createElement","className","react_router_dom","to","Page","props","children","HomeLink","label","Button_default","color","size","variant","defaultProps","card","actions","avatar_message","error","isFetching","title","subheader","cardHeaderProps","avatar","Avatar_default","index_es","concat","Object","assign","CircularProgress_default","_","isEmpty","Typography_default","links_HomeLink_HomeLink","undefined","content_center","DATA_TYPES","FIELD_TYPES","boolean","integer","string","generateValues","form","values","length","entries","reduce","result","_ref","_ref2","slicedToArray","key","value","objectSpread","defineProperty","validateSchema","schema","_ref3","_ref4","params","dataType","required","validator","Yup","shape","FormFields","attr","onChange","setFieldTouched","_form$attr","options","readOnly","handleBlur","handleChange","event","Fragment","textFieldProps","name","disabled","onBlur","type","TextField_default","select","map","item","MenuItem_default","renderField","results","formik_esm","enableReinitialize","initialValues","onSubmit","onSave","submitModelForm","validationSchema","dirty","errors","handleReset","isValid","submitForm","touched","areButtonsVisible","keys","index","form_FormFields_FormFields","CardActions_default","card-actions__form--hide","onClick","REQUEST","SUCCESS","FAILURE","createRequestTypes","base","Error","accumulator","createAction","payload","arguments","GET_FORM_DATA","GET_QUESTIONS","NEXT_QUESTION","GRADE","generateOptions","data","id","axios","require","formActions","types","quizActions","FormContainer","handleOnSave","_this$props","_this","getQuestionsAction","history","replace","getFormDataAction","this","_this$props$form","card_Card","Form_form","Component","connect","state","dispatch","asyncToGenerator","regenerator_default","mark","_callee","URL","_yield$axios$get","ax","res","formData","_error$response","status","statusText","wrap","_context","prev","next","get","sent","create","baseURL","category","trivia_categories","t0","console","log","response","stop","_x","apply","Home","shared_pages_Page","Form_Form","Question","answers","shuffleAnswers","_this$props$item","correct_answer","incorrect_answers","setState","shuffle","prevProps","prevItem","isEqual","answered","handleAnswer","_this$props$item2","question","answer","Answer","isAnswerCorrect","answer--correct","CheckCircleOutlined_default","CancelOutlined_default","Quiz","current","quiz_Question_Question","quiz_Answer_Answer","initialState","hideQuiz","QuizContainer","resetState","handleGrade","gradeAction","handleOnClickNext","nextQuestionAction","handleOnClickFinish","display","_this$state","_this$props$quiz","quiz","response_code","quiz_Quiz_Quiz","diplayButton","_this$state2","_this$props$quiz2","finish","buttonProps","prevCurrent","prevResults","_this$props$quiz3","_this$props$quiz4","grade","_callee3","_context3","_x3","_callee2","_context2","_x2","containers_Quiz_Quiz","Results","count","results__number-double","_props$quiz","components_Results_Results","containers_Results_Results","NotFound","App","vh","window","innerHeight","document","documentElement","style","setProperty","setViewportHeight","basename","components_Header_Header","react_router","exact","path","component","routes","rootReducer","combineReducers","action","_action$data","store","createStore","composeWithDevTools","applyMiddleware","thunkMiddleware","theme","createMuiTheme","palette","primary","main","typography","useNextVariants","styles","components_App_App","ReactDOM","render","react_redux_es","src_App","getElementById"],"mappings":"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","file":"static/js/main.5b14ba8e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"black\":\"#000\",\"white\":\"#fff\",\"midGray\":\"#a3a3a3\",\"darkPurple\":\"#03223b\",\"purple\":\"#60607e\",\"lightGreen\":\"#a5d6a7\",\"lightMidGreen\":\"#00f59e\",\"lightDarkGreen\":\"#11c574\",\"lightRed\":\"#ef9a9a\",\"lightBlue\":\"#81d4fa\",\"lightPurple\":\"#b39ddb\",\"lightAqua\":\"#80cbc4\"};","export const BASE_ROUTE = '/keep-austin-nerdy';\nexport const HOME_ROUTE = '/';\nexport const QUIZ_ROUTE = '/quiz';\nexport const RESULTS_ROUTE = '/results';\nexport const NOT_FOUND_ROUTE = '/not-found';\n","// @vendors\nimport React from 'react';\nimport { Link } from 'react-router-dom';\n\n// @utiles\nimport { HOME_ROUTE } from '../../utiles/routes';\n\n// @styles\nimport './Header.scss';\n\nconst Header = () => (\n    <div className=\"header\">\n        <Link to={HOME_ROUTE} className=\"header__logo\" />\n    </div>\n);\n\nexport default Header;\n","// @vendors\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\n// @styles\nimport './Page.scss';\n\nconst Page = (props) => {\n    const { children } = props;\n    return (\n        <div className=\"page\">\n            {children}\n        </div>\n    );\n};\n\nPage.propTypes = {\n    children: PropTypes.oneOfType([\n        PropTypes.arrayOf(PropTypes.node),\n        PropTypes.node\n    ]).isRequired\n};\n\nexport default Page;\n","// @vendors\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\n\n// @material-ui\nimport Button from '@material-ui/core/Button';\n\n// @utiles\nimport { HOME_ROUTE } from '../../../../utiles/routes';\n\nconst HomeLink = (props) => {\n    const { className, label } = props;\n\n    return (\n        <div className={className}>\n            <Link to={HOME_ROUTE} className=\"button-link\">\n                <Button color=\"primary\" size=\"small\" variant=\"contained\">{label}</Button>\n            </Link>\n        </div>\n    );\n};\n\nHomeLink.propTypes = {\n    className: PropTypes.string,\n    label: PropTypes.string\n};\n\nHomeLink.defaultProps = {\n    className: '',\n    label: 'Start'\n};\n\nexport default HomeLink;\n","/* eslint-disable camelcase */\n// @vendors\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport _ from 'lodash';\n\n// @material-ui\nimport {\n    Card, CardHeader, CardContent, CardActions\n} from '@material-ui/core';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Avatar from '@material-ui/core/Avatar';\nimport Typography from '@material-ui/core/Typography';\n\n// @components\nimport HomeLink from '../links/HomeLink/HomeLink';\n\n// @styles\nimport './Card.scss';\n\nconst card = (props) => {\n    const {\n        actions,\n        avatar_message,\n        children,\n        className,\n        error,\n        isFetching,\n        title,\n        subheader\n    } = props;\n    const cardHeaderProps = {};\n\n    if (avatar_message) {\n        cardHeaderProps.avatar = (<Avatar className=\"card-header__avatar\">{avatar_message}</Avatar>);\n    }\n\n    const display = () => {\n        if (isFetching) {\n            return (\n                <div className=\"center-content\">\n                    <CircularProgress />\n                </div>\n            );\n        }\n\n        if (!_.isEmpty(error)) {\n            return (\n                <div className=\"center-content error\">\n                    <Typography variant=\"h2\">Error</Typography>\n                    <HomeLink label=\"Home\" />\n                </div>\n            );\n        }\n\n        return children;\n    };\n\n    return (\n        <Card className={`card ${className}`}>\n            <CardHeader\n                className=\"card-header\"\n                title={title}\n                subheader={subheader}\n                {...cardHeaderProps}\n            />\n            <CardContent className=\"card-content\">\n                {display()}\n            </CardContent>\n            { actions\n                    && (\n                        <CardActions className=\"card-actions\">\n                            {actions}\n                        </CardActions>\n                    )\n            }\n        </Card>\n    );\n};\n\ncard.propTypes = {\n    actions: PropTypes.oneOfType([\n        PropTypes.arrayOf(PropTypes.node),\n        PropTypes.node\n    ]),\n    avatar_message: PropTypes.string,\n    children: PropTypes.oneOfType([\n        PropTypes.arrayOf(PropTypes.node),\n        PropTypes.node\n    ]).isRequired,\n    className: PropTypes.string,\n    error: PropTypes.shape({}),\n    isFetching: PropTypes.bool,\n    title: PropTypes.string,\n    subheader: PropTypes.string\n};\n\ncard.defaultProps = {\n    actions: undefined,\n    avatar_message: '',\n    className: '',\n    content_center: '',\n    error: {},\n    isFetching: false,\n    title: '',\n    subheader: ''\n};\n\nexport default card;\n","// @vendors\nimport * as Yup from 'yup';\n\nexport const DATA_TYPES = {\n    BOOLEAN: 'boolean',\n    INTEGER: 'integer',\n    STRING: 'string'\n};\n\nexport const FIELD_TYPES = {\n    boolean: 'boolean',\n    integer: 'number',\n    string: 'string'\n};\n\nexport const generateValues = (form) => {\n    let values = {};\n    if (form.length > 0) {\n        values = Object.entries(form[0])\n            .reduce((result, [key, value]) => ({\n                ...result,\n                [key]: value.value\n            }), {});\n    }\n    return values;\n};\n\nexport const submitModelForm = (values, props) => props.onSave(values);\n\nexport const validateSchema = (form) => {\n    let schema = {};\n    if (form.length > 0) {\n        schema = Object.entries(form[0])\n            .reduce((result, [key, params]) => {\n                const { dataType, required } = params;\n\n                if (!FIELD_TYPES[dataType]) {\n                    return { ...result };\n                }\n\n                let validator = Yup[FIELD_TYPES[dataType]]();\n\n                if (required) {\n                    validator = validator.required('validation.required');\n                }\n\n                return {\n                    ...result,\n                    [key]: validator\n                };\n            }, {});\n    }\n    return Yup.object().shape(schema);\n};\n","// @vendors\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\n// @material-ui\nimport TextField from '@material-ui/core/TextField';\nimport MenuItem from '@material-ui/core/MenuItem';\n\n// @utiles\nimport { DATA_TYPES, FIELD_TYPES } from '../../../../utiles/formHelpers';\n\nconst FormFields = (props) => {\n    const {\n        // Component props\n        attr,\n        error,\n        form,\n        onChange,\n        value,\n        // Formik props\n        setFieldTouched\n    } = props;\n    const {\n        dataType,\n        label,\n        options,\n        readOnly,\n        required\n    } = form[attr];\n\n    const handleBlur = () => {\n        setFieldTouched(attr);\n    };\n\n    const handleChange = (event) => {\n        setFieldTouched(attr);\n        onChange(event);\n    };\n\n    const renderField = () => {\n        if (dataType === DATA_TYPES.STRING || dataType === DATA_TYPES.INTEGER) {\n            const textFieldProps = {\n                name: attr,\n                label,\n                disabled: readOnly,\n                error,\n                onBlur: handleBlur,\n                onChange: handleChange,\n                required,\n                type: FIELD_TYPES[dataType],\n                value\n            };\n\n            if (options && options.length > 0) {\n                return (\n                    <TextField {...textFieldProps} select>\n                        {\n                            options.map(item => (\n                                <MenuItem key={item.value} value={item.value}>{item.label}</MenuItem>\n                            ))\n                        }\n                    </TextField>\n                );\n            }\n\n            return (\n                <TextField {...textFieldProps} />\n            );\n        }\n        return null;\n    };\n\n    return (\n        <>{renderField()}</>\n    );\n};\n\nFormFields.propTypes = {\n    attr: PropTypes.string.isRequired,\n    error: PropTypes.bool,\n    form: PropTypes.shape({}).isRequired,\n    onChange: PropTypes.func.isRequired,\n    setFieldTouched: PropTypes.func.isRequired,\n    value: PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string\n    ]).isRequired\n};\n\nFormFields.defaultProps = {\n    error: false\n};\n\nexport default FormFields;\n","// @vendors\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Formik, Form } from 'formik';\nimport className from 'classnames';\n\n// @material-ui\nimport CardActions from '@material-ui/core/CardActions';\nimport Button from '@material-ui/core/Button';\n\n// @components\nimport FormFields from '../FormFields/FormFields';\n\n// @utiles\nimport {\n    generateValues,\n    submitModelForm,\n    validateSchema\n} from '../../../../utiles/formHelpers';\n\n// @styles\nimport './Form.scss';\n\nconst form = (props) => {\n    const { results } = props;\n\n    return (\n        <Formik\n            enableReinitialize\n            initialValues={generateValues(results)}\n            onSubmit={values => submitModelForm(values, props)}\n            validationSchema={validateSchema(results)}\n        >\n            {({\n                dirty,\n                errors,\n                handleChange,\n                handleReset,\n                isValid,\n                setFieldTouched,\n                submitForm,\n                touched,\n                values\n            }) => {\n                const areButtonsVisible = Object.keys(touched).length > 0 && dirty;\n\n                return (\n                    <Form className=\"form\">\n                        {\n                            Object.keys(values).map((attr, index) => (\n                                <FormFields\n                                    key={index}\n                                    attr={attr}\n                                    error={(touched[attr] && errors[attr]) && !isValid}\n                                    form={results[0]}\n                                    onChange={handleChange}\n                                    setFieldTouched={setFieldTouched}\n                                    value={values[attr]}\n                                />\n                            ))\n                        }\n                        <CardActions\n                            className={className(\n                                'card-actions__form',\n                                { 'card-actions__form--hide': !areButtonsVisible }\n                            )}\n                        >\n                            <Button\n                                color=\"primary\"\n                                disabled={!isValid}\n                                onClick={submitForm}\n                                size=\"small\"\n                                variant=\"contained\"\n                            >\n                                Save\n                            </Button>\n                            <Button\n                                onClick={() => handleReset()}\n                                size=\"small\"\n                            >\n                                Reset\n                            </Button>\n                        </CardActions>\n                    </Form>\n                );\n            }}\n        </Formik>\n    );\n};\n\nform.propTypes = {\n    results: PropTypes.array.isRequired\n};\n\nexport default form;\n","export const REQUEST = 'REQUEST';\nexport const SUCCESS = 'SUCCESS';\nexport const FAILURE = 'FAILURE';\n\nexport function createRequestTypes(base) {\n    if (!base) {\n        throw new Error('cannot create request type with base = \\'\\' or base = null');\n    }\n    return [REQUEST, SUCCESS, FAILURE].reduce((accumulator, type) => {\n        // eslint-disable-next-line no-param-reassign\n        accumulator[type] = `${base}_${type}`;\n        return accumulator;\n    }, {});\n}\n\nexport function createAction(type, payload = {}) {\n    return {\n        type,\n        ...payload\n    };\n}\n","import { createRequestTypes } from './index';\n\n// Form Actions\nexport const GET_FORM_DATA = createRequestTypes('GET_FORM_DATA');\n\n// Quiz Actions\nexport const GET_QUESTIONS = createRequestTypes('GET_QUESTIONS');\nexport const NEXT_QUESTION = 'NEXT_QUESTION';\nexport const GRADE = 'GRADE';\n","export const generateOptions = data => data.map(item => ({\n    label: item.name,\n    value: item.id\n}));\n\nexport const setViewportHeight = () => {\n    const vh = window.innerHeight * 0.01;\n    document.documentElement.style.setProperty('--vh', `${vh}px`);\n};\n","// @actionTypes\nimport * as types from '../actionTypes';\nimport {\n    createAction,\n    REQUEST,\n    SUCCESS,\n    FAILURE\n} from '../index';\n\n// @utiles\nimport { generateOptions } from '../../../utiles/helpers';\n\n// @vendors\nconst axios = require('axios');\n\nconst baseURL = 'https://opentdb.com';\n\nexport const formActions = {\n    request: () => createAction(types.GET_FORM_DATA[REQUEST]),\n    success: results => createAction(types.GET_FORM_DATA[SUCCESS], { results }),\n    failure: error => createAction(types.GET_FORM_DATA[FAILURE], { error })\n};\n\nexport const getFormDataAction = () => async (dispatch) => {\n    const URL = `${baseURL}/api_category.php`;\n    try {\n        dispatch(formActions.request());\n        const { data } = await axios.get(URL);\n        const ax = axios.create({\n            baseURL: 'http://robertvarela.com/keep-austin-nerdy'\n        });\n        const res = await ax.get('formData.json');\n        const formData = res.data;\n        formData[0].category = {\n            ...formData[0].category,\n            options: generateOptions(data.trivia_categories)\n        };\n        dispatch(formActions.success(formData));\n    } catch (error) {\n        console.log('Error', error);\n        const { status, statusText } = error.response;\n        dispatch(formActions.failure({ status, statusText }));\n    }\n};\n","// @actionTypes\nimport * as types from '../actionTypes';\nimport {\n    createAction,\n    REQUEST,\n    SUCCESS,\n    FAILURE\n} from '../index';\n\n// @vendors\nconst axios = require('axios');\n\nconst baseURL = 'https://opentdb.com';\n\nexport const quizActions = {\n    request: () => createAction(types.GET_QUESTIONS[REQUEST]),\n    success: data => createAction(types.GET_QUESTIONS[SUCCESS], { data }),\n    failure: error => createAction(types.GET_QUESTIONS[FAILURE], { error })\n};\n\nexport const getQuestionsAction = values => async (dispatch) => {\n    const URL = `${baseURL}/api.php`;\n    try {\n        dispatch(quizActions.request());\n        const { data } = await axios.get(URL, {\n            params: { ...values }\n        });\n        dispatch(quizActions.success(data));\n    } catch (error) {\n        console.log('Error', error);\n        const { status, statusText } = error.response;\n        dispatch(quizActions.failure({ status, statusText }));\n    }\n};\n\nexport const nextQuestionAction = () => async (dispatch) => {\n    dispatch({\n        type: types.NEXT_QUESTION\n    });\n};\n\nexport const gradeAction = () => async (dispatch) => {\n    dispatch({\n        type: types.GRADE\n    });\n};\n","// @vendors\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\n// @components\nimport Card from '../../components/shared/card/Card';\nimport Form from '../../components/shared/form/Form/form';\n\n// @actions\nimport { getFormDataAction } from '../../store/actions/form/form';\nimport { getQuestionsAction } from '../../store/actions/quiz/quiz';\n\n// @utiles\nimport { QUIZ_ROUTE } from '../../utiles/routes';\n\nclass FormContainer extends Component {\n    componentDidMount() {\n        const { getFormDataAction } = this.props;\n        getFormDataAction();\n    }\n\n    handleOnSave = (values) => {\n        const { getQuestionsAction, history } = this.props;\n        getQuestionsAction(values);\n        history.replace(QUIZ_ROUTE);\n    }\n\n    render() {\n        const { form: { error, isFetching, results } } = this.props;\n        return (\n            <Card\n                error={error}\n                isFetching={isFetching}\n                title=\"Start\"\n            >\n                <Form\n                    onSave={this.handleOnSave}\n                    results={results}\n                />\n            </Card>\n        );\n    }\n}\n\nconst mapDispatchToProps = dispatch => ({\n    getFormDataAction: () => dispatch(getFormDataAction()),\n    getQuestionsAction: values => dispatch(getQuestionsAction(values))\n});\n\nconst mapStateToProps = state => ({\n    form: state.form\n});\n\nFormContainer.propTypes = {\n    form: PropTypes.shape({\n        error: PropTypes.shape({}),\n        isFetching: PropTypes.bool,\n        results: PropTypes.array\n    }).isRequired,\n    getFormDataAction: PropTypes.func.isRequired,\n    getQuestionsAction: PropTypes.func.isRequired,\n    history: PropTypes.shape({\n        replace: PropTypes.func\n    }).isRequired\n};\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(FormContainer);\n","// @vendors\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\n// @components\nimport Page from '../Page';\nimport FormContainer from '../../../../containers/Form/Form';\n\nexport const Home = ({ history }) => (\n    <Page>\n        <FormContainer history={history} />\n    </Page>\n);\n\nHome.propTypes = {\n    history: PropTypes.shape({}).isRequired\n};\n\nexport default Home;\n","/* eslint-disable camelcase */\n// @vendors\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport _ from 'lodash';\n\n// @material-ui\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\n\nclass Question extends Component {\n    state = {\n        answers: []\n    }\n\n    componentDidMount() {\n        this.shuffleAnswers();\n    }\n\n    componentDidUpdate(prevProps) {\n        const prevItem = prevProps.item;\n        const { item } = this.props;\n        if (!_.isEqual(prevItem, item)) {\n            this.shuffleAnswers();\n        }\n    }\n\n    shuffleAnswers = () => {\n        const {\n            item: { correct_answer, incorrect_answers }\n        } = this.props;\n        this.setState({\n            answers: _.shuffle(incorrect_answers.concat(correct_answer))\n        });\n    }\n\n    render() {\n        const { answers } = this.state;\n        const {\n            answered,\n            handleAnswer,\n            item: { correct_answer, question }\n        } = this.props;\n\n        return (\n            <>\n                <Typography className=\"question\" variant=\"body1\">{question}</Typography>\n                {\n                    answers.map(answer => (\n                        <Button\n                            key={answer}\n                            disabled={answered}\n                            onClick={() => handleAnswer(answer, correct_answer)}\n                            size=\"small\"\n                            variant=\"outlined\"\n                        >\n                            {answer}\n                        </Button>\n                    ))\n                }\n            </>\n        );\n    }\n}\n\nQuestion.propTypes = {\n    answered: PropTypes.bool.isRequired,\n    handleAnswer: PropTypes.func.isRequired,\n    item: PropTypes.shape({\n        correct_answer: PropTypes.string,\n        incorrect_answers: PropTypes.array,\n        question: PropTypes.string\n    }).isRequired\n};\n\nexport default Question;\n","// @vendors\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport className from 'classnames';\n\n// @material-ui\nimport CheckCircleOutlinedIcon from '@material-ui/icons/CheckCircleOutlined';\nimport CancelOutlinedIcon from '@material-ui/icons/CancelOutlined';\n\n// @styles\nimport './Answer.scss';\n\nconst Answer = (props) => {\n    const { answer, isAnswerCorrect } = props;\n\n    return (\n        <div\n            className={className(\n                'answer',\n                'center-content',\n                { 'answer--correct': isAnswerCorrect }\n            )}\n        >\n            {(isAnswerCorrect) ? <CheckCircleOutlinedIcon /> : <CancelOutlinedIcon />}\n            {answer}\n        </div>\n    );\n};\n\n\nAnswer.propTypes = {\n    answer: PropTypes.string.isRequired,\n    isAnswerCorrect: PropTypes.bool.isRequired\n};\n\nexport default Answer;\n","// @vendors\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\n// @components\nimport Question from '../Question/Question';\nimport Answer from '../Answer/Answer';\n\n// @styles\nimport './Quiz.scss';\n\nconst Quiz = (props) => {\n    const {\n        answer, answered, current, handleAnswer, isAnswerCorrect, results\n    } = props;\n\n    return (\n        <div className=\"quiz\">\n            <Question\n                answered={answered}\n                handleAnswer={handleAnswer}\n                item={results[current]}\n            />\n            { answered\n                && <Answer answer={answer} isAnswerCorrect={isAnswerCorrect} />\n            }\n        </div>\n    );\n};\n\nQuiz.propTypes = {\n    answer: PropTypes.string.isRequired,\n    answered: PropTypes.bool.isRequired,\n    current: PropTypes.number.isRequired,\n    handleAnswer: PropTypes.func.isRequired,\n    isAnswerCorrect: PropTypes.bool.isRequired,\n    results: PropTypes.array.isRequired\n};\n\nexport default Quiz;\n","/* eslint-disable camelcase */\n// @vendors\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport _ from 'lodash';\n\n// @material-ui\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\n\n// @components\nimport Card from '../../components/shared/card/Card';\nimport Quiz from '../../components/quiz/Quiz/Quiz';\nimport HomeLink from '../../components/shared/links/HomeLink/HomeLink';\n\n// @actions\nimport { gradeAction, nextQuestionAction } from '../../store/actions/quiz/quiz';\n\n// @utiles\nimport { RESULTS_ROUTE } from '../../utiles/routes';\n\nconst initialState = {\n    answer: '',\n    answered: false,\n    isAnswerCorrect: false,\n    hideQuiz: true\n};\n\nclass QuizContainer extends Component {\n    state = initialState;\n\n    componentDidUpdate(prevProps) {\n        const prevCurrent = prevProps.quiz.current;\n        const prevResults = prevProps.quiz.results;\n        const { quiz: { current, error, results } } = this.props;\n\n        if (!_.isEqual(prevResults, results)) {\n            // eslint-disable-next-line react/no-did-update-set-state\n            this.setState({\n                hideQuiz: _.isEmpty(results) && _.isEmpty(error)\n            });\n        }\n\n        if (!_.isEqual(prevCurrent, current)) {\n            this.resetState();\n        }\n    }\n\n    resetState = () => {\n        const { hideQuiz } = this.state;\n        this.setState({\n            ...initialState,\n            hideQuiz\n        });\n    }\n\n    handleAnswer = (answer, correct_answer) => {\n        if (answer === correct_answer) {\n            this.handleGrade();\n            this.setState({ isAnswerCorrect: true });\n        }\n\n        this.setState({ answer, answered: true });\n    };\n\n    handleGrade = () => {\n        const { gradeAction } = this.props;\n        gradeAction();\n    };\n\n    handleOnClickNext = () => {\n        const { nextQuestionAction } = this.props;\n        nextQuestionAction();\n    };\n\n    handleOnClickFinish = () => {\n        const { history } = this.props;\n        history.replace(RESULTS_ROUTE);\n    };\n\n    display = () => {\n        const {\n            answer, answered, hideQuiz, isAnswerCorrect\n        } = this.state;\n        const {\n            quiz: { current, response_code, results }\n        } = this.props;\n\n        if (hideQuiz) {\n            return (\n                <div className=\"center-content error\">\n                    {\n                        !_.isEqual(response_code, 0)\n                        && <Typography variant=\"h2\">Try Again</Typography>\n                    }\n                    <HomeLink />\n                </div>\n            );\n        }\n\n        return (\n            <Quiz\n                answer={answer}\n                answered={answered}\n                current={current}\n                handleAnswer={this.handleAnswer}\n                isAnswerCorrect={isAnswerCorrect}\n                results={results}\n            />\n        );\n    };\n\n    diplayButton = () => {\n        const { answered, hideQuiz } = this.state;\n        const { quiz: { current, results } } = this.props;\n        const finish = ((current + 1) === results.length);\n        const buttonProps = {\n            onClick: this.handleOnClickNext,\n            label: 'Next'\n        };\n\n        if (finish) {\n            buttonProps.className = 'card-actions__finish';\n            buttonProps.onClick = this.handleOnClickFinish;\n            buttonProps.label = 'Finish';\n        }\n\n        return (\n            !hideQuiz\n            && (\n                <Button\n                    {...buttonProps}\n                    color=\"primary\"\n                    disabled={!answered}\n                    size=\"small\"\n                    variant=\"contained\"\n                >\n                    {buttonProps.label}\n                </Button>\n            )\n        );\n    };\n\n    render() {\n        const {\n            quiz: {\n                current, error, grade, isFetching, results\n            }\n        } = this.props;\n        const title = (!_.isEmpty(results)) ? results[0].category : 'Quiz';\n        const subheader = (!_.isEmpty(results)) ? `${current + 1} of ${results.length}` : '';\n\n        return (\n            <Card\n                actions={this.diplayButton()}\n                avatar_message={`${grade}%`}\n                error={error}\n                isFetching={isFetching}\n                title={title}\n                subheader={subheader}\n            >\n                {this.display()}\n            </Card>\n        );\n    }\n}\n\nconst mapDispatchToProps = dispatch => ({\n    gradeAction: () => dispatch(gradeAction()),\n    nextQuestionAction: () => dispatch(nextQuestionAction())\n});\n\nconst mapStateToProps = state => ({\n    quiz: state.quiz\n});\n\nQuizContainer.propTypes = {\n    gradeAction: PropTypes.func.isRequired,\n    history: PropTypes.shape({\n        replace: PropTypes.func\n    }).isRequired,\n    nextQuestionAction: PropTypes.func.isRequired,\n    quiz: PropTypes.shape({\n        current: PropTypes.number,\n        error: PropTypes.shape({}),\n        grade: PropTypes.number,\n        isFetching: PropTypes.bool,\n        response_code: PropTypes.number,\n        results: PropTypes.array\n    }).isRequired\n};\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(QuizContainer);\n","// @vendors\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\n// @components\nimport Page from '../Page';\nimport QuizContainer from '../../../../containers/Quiz/Quiz';\n\nexport const Quiz = ({ history }) => (\n    <Page>\n        <QuizContainer history={history} />\n    </Page>\n);\n\nQuiz.propTypes = {\n    history: PropTypes.shape({}).isRequired\n};\n\nexport default Quiz;\n","/* eslint-disable camelcase */\n// @vendors\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport className from 'classnames';\n\n// @material-ui\nimport Typography from '@material-ui/core/Typography';\n\n// @styles\nimport './Results.scss';\n\nconst Results = ({ results }) => (\n    <div className=\"results\">\n        {\n            results.map((item, index) => {\n                const { correct_answer, question } = item;\n                const count = index + 1;\n                return (\n                    <div key={index}>\n                        <div\n                            className={className(\n                                'results__number',\n                                { 'results__number-double': (count > 9) }\n                            )}\n                        >\n                            <Typography variant=\"body2\">{`${count}.`}</Typography>\n                        </div>\n                        <div className=\"results__q-and-a\">\n                            <Typography variant=\"body2\">{question}</Typography>\n                            <Typography className=\"results__answer\" variant=\"body2\">{correct_answer}</Typography>\n                        </div>\n                    </div>\n                );\n            })\n        }\n    </div>\n);\n\nResults.propTypes = {\n    results: PropTypes.array.isRequired\n};\n\nexport default Results;\n","// @vendors\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport _ from 'lodash';\n\n// @components\nimport Card from '../../components/shared/card/Card';\nimport Results from '../../components/Results/Results';\nimport HomeLink from '../../components/shared/links/HomeLink/HomeLink';\n\nconst ResultsContainer = (props) => {\n    const {\n        quiz: {\n            error, grade, isFetching, results\n        }\n    } = props;\n    const hideQuiz = _.isEmpty(results) && _.isEmpty(error);\n    const subheader = (!_.isEmpty(results)) ? results[0].category : '';\n\n    const display = () => {\n        if (hideQuiz) {\n            return (<HomeLink className=\"center-content\" />);\n        }\n\n        return (\n            <Results results={results} />\n        );\n    };\n\n    const diplayButton = () => (\n        !hideQuiz\n            && <HomeLink label=\"Restart\" />\n    );\n\n    return (\n        <Card\n            actions={diplayButton()}\n            avatar_message={`${grade}%`}\n            error={error}\n            isFetching={isFetching}\n            title=\"Results\"\n            subheader={subheader}\n        >\n            {display()}\n        </Card>\n    );\n};\n\nconst mapStateToProps = state => ({\n    quiz: state.quiz\n});\n\nResultsContainer.propTypes = {\n    quiz: PropTypes.shape({\n        error: PropTypes.shape({}),\n        grade: PropTypes.number,\n        isFetching: PropTypes.bool,\n        results: PropTypes.array\n    }).isRequired\n};\n\nexport default connect(\n    mapStateToProps,\n    null\n)(ResultsContainer);\n","// @vendors\nimport React from 'react';\n\n// @components\nimport Page from '../Page';\nimport ResultsContainer from '../../../../containers/Results/Results';\n\nexport const Results = () => (\n    <Page>\n        <ResultsContainer />\n    </Page>\n);\n\nexport default Results;\n","// @vendors\nimport React from 'react';\n\n// @material-ui\nimport Typography from '@material-ui/core/Typography';\n\n// @components\nimport Page from '../Page';\nimport HomeLink from '../../links/HomeLink/HomeLink';\n\n// @styles\nimport './NotFound.scss';\n\nexport const NotFound = () => (\n    <Page>\n        <div className=\"not-found\">\n            <Typography className=\"not-found__title\" variant=\"h2\">Page Not Found</Typography>\n            <HomeLink label=\"Home\" />\n        </div>\n    </Page>\n);\n\nexport default NotFound;\n","// @vendors\nimport React from 'react';\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Route,\n    Redirect\n} from 'react-router-dom';\n\n// @components\nimport Header from '../Header/Header';\nimport Home from '../shared/pages/Home/Home';\nimport Quiz from '../shared/pages/Quiz/Quiz';\nimport Results from '../shared/pages/Results/Results';\nimport NotFound from '../shared/pages/NotFound/NotFound';\n\n// @styles\nimport './App.scss';\n\n// @utiles\nimport * as routes from '../../utiles/routes';\nimport { setViewportHeight } from '../../utiles/helpers';\n\nconst App = () => {\n    // Set viewport height\n    setViewportHeight();\n\n    return (\n        <div className=\"App\">\n            <Router basename={routes.BASE_ROUTE}>\n                <Header />\n                <Switch>\n                    <Route exact path={routes.HOME_ROUTE} component={Home} />\n                    <Route exact path={routes.QUIZ_ROUTE} component={Quiz} />\n                    <Route exact path={routes.RESULTS_ROUTE} component={Results} />\n                    <Route exact path={routes.NOT_FOUND_ROUTE} component={NotFound} />\n                    <Redirect to={routes.NOT_FOUND_ROUTE} />\n                </Switch>\n            </Router>\n        </div>\n    );\n};\n\nexport default App;\n","// @actionTypes\nimport * as types from '../../actions/actionTypes';\n\n// @utiles\nimport {\n    REQUEST,\n    SUCCESS,\n    FAILURE\n} from '../../actions/index';\n\nexport const initialState = {\n    error: {},\n    isFetching: false,\n    results: []\n};\n\nexport default function reducer(state = initialState, action) {\n    switch (action.type) {\n        case types.GET_FORM_DATA[REQUEST]:\n            return {\n                ...state,\n                isFetching: true\n            };\n        case types.GET_FORM_DATA[SUCCESS]: {\n            const { results } = action;\n            return {\n                ...state,\n                isFetching: false,\n                results\n            };\n        }\n        case types.GET_FORM_DATA[FAILURE]: {\n            const { error } = action;\n            return {\n                ...state,\n                error,\n                isFetching: false\n            };\n        }\n        default:\n            return state;\n    }\n}\n","/* eslint-disable camelcase */\n// @actionTypes\nimport * as types from '../../actions/actionTypes';\n\n// @utiles\nimport {\n    REQUEST,\n    SUCCESS,\n    FAILURE\n} from '../../actions/index';\n\nexport const initialState = {\n    current: 0,\n    error: {},\n    grade: 0,\n    isFetching: false,\n    response_code: 0,\n    results: []\n};\n\nexport default function reducer(state = initialState, action) {\n    switch (action.type) {\n        case types.GET_QUESTIONS[REQUEST]:\n            return {\n                ...initialState,\n                isFetching: true\n            };\n        case types.GET_QUESTIONS[SUCCESS]: {\n            const { response_code, results } = action.data;\n            return {\n                ...state,\n                isFetching: false,\n                response_code,\n                results\n            };\n        }\n        case types.GET_QUESTIONS[FAILURE]: {\n            const { error } = action;\n            return {\n                ...state,\n                error,\n                isFetching: false\n            };\n        }\n        case types.NEXT_QUESTION:\n            return {\n                ...state,\n                current: state.current + 1\n            };\n        case types.GRADE:\n            return {\n                ...state,\n                grade: state.grade + 10\n            };\n        default:\n            return state;\n    }\n}\n","import { combineReducers } from 'redux';\n\nimport form from './form/form';\nimport quiz from './quiz/quiz';\n\nconst rootReducer = combineReducers({\n    form,\n    quiz\n});\n\nexport default rootReducer;\n","// @vendors\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport thunkMiddleware from 'redux-thunk';\nimport { createStore, applyMiddleware } from 'redux';\nimport { Provider } from 'react-redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\n\n// @material-ui\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\n\n// @containers\nimport Root from './components/App/App';\n\n// @reducers\nimport rootReducer from './store/reducers/index';\n\nconst store = createStore(rootReducer, composeWithDevTools(applyMiddleware(thunkMiddleware)));\n\n// Set Material-UI theme\nconst theme = createMuiTheme({\n    palette: {\n        primary: {\n            main: '#81d4fa'\n        }\n    },\n    typography: {\n        useNextVariants: true\n    }\n});\n\nconst App = () => (\n    <MuiThemeProvider theme={theme}>\n        <Root />\n    </MuiThemeProvider>\n);\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}