{"version":3,"sources":["components/Header/Header.scss","utiles/routes.js","components/Header/Header.js","utiles/helpers.js","components/shared/pages/Page.js","components/shared/links/HomeLink/HomeLink.js","components/shared/card/Card.js","utiles/formHelpers.js","components/shared/form/FormFields/FormFields.js","components/shared/form/Form/form.js","store/actions/index.js","store/actions/actionTypes.js","store/actions/form/form.js","store/actions/quiz/quiz.js","containers/Form/Form.js","components/shared/pages/Home/Home.js","components/quiz/Question/Question.js","components/quiz/Answer/Answer.js","components/quiz/Quiz/Quiz.js","containers/Quiz/Quiz.js","components/shared/pages/Quiz/Quiz.js","components/Results/Results.js","containers/Results/Results.js","components/shared/pages/Results/Results.js","components/shared/pages/NotFound/NotFound.js","components/App/App.js","store/reducers/form/form.js","store/reducers/quiz/quiz.js","store/reducers/index.js","index.js"],"names":["module","exports","black","white","midGray","darkPurple","purple","lightGreen","lightMidGreen","lightDarkGreen","lightRed","lightBlue","lightPurple","lightAqua","QUIZ_ROUTE","RESULTS_ROUTE","Header","react_default","a","createElement","className","react_router_dom","to","generateOptions","data","map","item","label","name","value","id","Page","props","children","vh","window","innerHeight","document","documentElement","style","setProperty","concat","setViewportHeight","HomeLink","Button_default","color","size","variant","defaultProps","card","actions","avatar_message","error","isFetching","title","subheader","cardHeaderProps","avatar","Avatar_default","index_es","Object","assign","CircularProgress_default","_","isEmpty","Typography_default","links_HomeLink_HomeLink","undefined","content_center","DATA_TYPES","FIELD_TYPES","boolean","integer","string","generateValues","form","values","length","entries","reduce","result","_ref","_ref2","slicedToArray","key","objectSpread","defineProperty","validateSchema","schema","_ref3","_ref4","params","dataType","required","validator","Yup","shape","FormFields","attr","onChange","setFieldTouched","_form$attr","options","readOnly","handleBlur","handleChange","event","Fragment","textFieldProps","disabled","onBlur","type","TextField_default","select","MenuItem_default","renderField","results","formik_esm","enableReinitialize","initialValues","onSubmit","onSave","submitModelForm","validationSchema","dirty","errors","handleReset","isValid","submitForm","touched","areButtonsVisible","keys","index","form_FormFields_FormFields","CardActions_default","card-actions__form--hide","onClick","REQUEST","SUCCESS","FAILURE","createRequestTypes","base","Error","accumulator","createAction","payload","arguments","GET_FORM_DATA","GET_QUESTIONS","NEXT_QUESTION","GRADE","axios","require","formActions","types","quizActions","FormContainer","handleOnSave","_this$props","_this","getQuestionsAction","history","replace","getFormDataAction","this","_this$props$form","card_Card","Form_form","Component","connect","state","dispatch","asyncToGenerator","regenerator_default","mark","_callee","URL","_yield$axios$get","ax","res","formData","_error$response","status","statusText","wrap","_context","prev","next","get","sent","create","baseURL","category","trivia_categories","t0","console","log","response","stop","_x","apply","Home","shared_pages_Page","Form_Form","Question","answers","shuffleAnswers","_this$props$item","correct_answer","incorrect_answers","setState","shuffle","prevProps","prevItem","isEqual","answered","handleAnswer","_this$props$item2","question","answer","Answer","isAnswerCorrect","answer--correct","CheckCircleOutlined_default","CancelOutlined_default","Quiz","current","quiz_Question_Question","quiz_Answer_Answer","initialState","hideQuiz","QuizContainer","resetState","handleGrade","gradeAction","handleOnClickNext","nextQuestionAction","handleOnClickFinish","display","_this$state","_this$props$quiz","quiz","response_code","quiz_Quiz_Quiz","diplayButton","_this$state2","_this$props$quiz2","finish","buttonProps","prevCurrent","prevResults","_this$props$quiz3","_this$props$quiz4","grade","_callee3","_context3","_x3","_callee2","_context2","_x2","containers_Quiz_Quiz","Results","count","results__number-double","_props$quiz","components_Results_Results","containers_Results_Results","NotFound","App","basename","components_Header_Header","react_router","exact","path","component","routes","rootReducer","combineReducers","action","_action$data","store","createStore","composeWithDevTools","applyMiddleware","thunkMiddleware","theme","createMuiTheme","palette","primary","main","typography","useNextVariants","styles","components_App_App","ReactDOM","render","react_redux_es","src_App","getElementById"],"mappings":"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","file":"static/js/main.d8870d10.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"black\":\"#000\",\"white\":\"#fff\",\"midGray\":\"#a3a3a3\",\"darkPurple\":\"#03223b\",\"purple\":\"#60607e\",\"lightGreen\":\"#a5d6a7\",\"lightMidGreen\":\"#00f59e\",\"lightDarkGreen\":\"#11c574\",\"lightRed\":\"#ef9a9a\",\"lightBlue\":\"#81d4fa\",\"lightPurple\":\"#b39ddb\",\"lightAqua\":\"#80cbc4\"};","export const BASE_ROUTE = '/keep-austin-nerdy';\nexport const HOME_ROUTE = '/';\nexport const QUIZ_ROUTE = '/quiz';\nexport const RESULTS_ROUTE = '/results';\nexport const NOT_FOUND_ROUTE = '/not-found';\n","// @vendors\nimport React from 'react';\nimport { Link } from 'react-router-dom';\n\n// @utiles\nimport { HOME_ROUTE } from '../../utiles/routes';\n\n// @styles\nimport './Header.scss';\n\nconst Header = () => (\n    <div className=\"header\">\n        <Link to={HOME_ROUTE} className=\"header__logo\" />\n    </div>\n);\n\nexport default Header;\n","export const generateOptions = data => data.map(item => ({\n    label: item.name,\n    value: item.id\n}));\n\nexport const setViewportHeight = () => {\n    const vh = window.innerHeight * 0.01;\n    document.documentElement.style.setProperty('--vh', `${vh}px`);\n};\n","// @vendors\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\n// @styles\nimport './Page.scss';\n\nimport { setViewportHeight } from '../../../utiles/helpers';\n\nconst Page = (props) => {\n    const { children } = props;\n\n    // Set viewport height\n    setViewportHeight();\n\n    return (\n        <div className=\"page\">\n            {children}\n        </div>\n    );\n};\n\nPage.propTypes = {\n    children: PropTypes.oneOfType([\n        PropTypes.arrayOf(PropTypes.node),\n        PropTypes.node\n    ]).isRequired\n};\n\nexport default Page;\n","// @vendors\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\n\n// @material-ui\nimport Button from '@material-ui/core/Button';\n\n// @utiles\nimport { HOME_ROUTE } from '../../../../utiles/routes';\n\nconst HomeLink = (props) => {\n    const { className, label } = props;\n\n    return (\n        <div className={className}>\n            <Link to={HOME_ROUTE} className=\"button-link\">\n                <Button color=\"primary\" size=\"small\" variant=\"contained\">{label}</Button>\n            </Link>\n        </div>\n    );\n};\n\nHomeLink.propTypes = {\n    className: PropTypes.string,\n    label: PropTypes.string\n};\n\nHomeLink.defaultProps = {\n    className: '',\n    label: 'Start'\n};\n\nexport default HomeLink;\n","/* eslint-disable camelcase */\n// @vendors\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport _ from 'lodash';\n\n// @material-ui\nimport {\n    Card, CardHeader, CardContent, CardActions\n} from '@material-ui/core';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Avatar from '@material-ui/core/Avatar';\nimport Typography from '@material-ui/core/Typography';\n\n// @components\nimport HomeLink from '../links/HomeLink/HomeLink';\n\n// @styles\nimport './Card.scss';\n\nconst card = (props) => {\n    const {\n        actions,\n        avatar_message,\n        children,\n        className,\n        error,\n        isFetching,\n        title,\n        subheader\n    } = props;\n    const cardHeaderProps = {};\n\n    if (avatar_message) {\n        cardHeaderProps.avatar = (<Avatar className=\"card-header__avatar\">{avatar_message}</Avatar>);\n    }\n\n    const display = () => {\n        if (isFetching) {\n            return (\n                <div className=\"center-content\">\n                    <CircularProgress />\n                </div>\n            );\n        }\n\n        if (!_.isEmpty(error)) {\n            return (\n                <div className=\"center-content error\">\n                    <Typography variant=\"h2\">Error</Typography>\n                    <HomeLink label=\"Home\" />\n                </div>\n            );\n        }\n\n        return children;\n    };\n\n    return (\n        <Card className={`card ${className}`}>\n            <CardHeader\n                className=\"card-header\"\n                title={title}\n                subheader={subheader}\n                {...cardHeaderProps}\n            />\n            <CardContent className=\"card-content\">\n                {display()}\n            </CardContent>\n            { actions\n                    && (\n                        <CardActions className=\"card-actions\">\n                            {actions}\n                        </CardActions>\n                    )\n            }\n        </Card>\n    );\n};\n\ncard.propTypes = {\n    actions: PropTypes.oneOfType([\n        PropTypes.arrayOf(PropTypes.node),\n        PropTypes.node\n    ]),\n    avatar_message: PropTypes.string,\n    children: PropTypes.oneOfType([\n        PropTypes.arrayOf(PropTypes.node),\n        PropTypes.node\n    ]).isRequired,\n    className: PropTypes.string,\n    error: PropTypes.shape({}),\n    isFetching: PropTypes.bool,\n    title: PropTypes.string,\n    subheader: PropTypes.string\n};\n\ncard.defaultProps = {\n    actions: undefined,\n    avatar_message: '',\n    className: '',\n    content_center: '',\n    error: {},\n    isFetching: false,\n    title: '',\n    subheader: ''\n};\n\nexport default card;\n","// @vendors\nimport * as Yup from 'yup';\n\nexport const DATA_TYPES = {\n    BOOLEAN: 'boolean',\n    INTEGER: 'integer',\n    STRING: 'string'\n};\n\nexport const FIELD_TYPES = {\n    boolean: 'boolean',\n    integer: 'number',\n    string: 'string'\n};\n\nexport const generateValues = (form) => {\n    let values = {};\n    if (form.length > 0) {\n        values = Object.entries(form[0])\n            .reduce((result, [key, value]) => ({\n                ...result,\n                [key]: value.value\n            }), {});\n    }\n    return values;\n};\n\nexport const submitModelForm = (values, props) => props.onSave(values);\n\nexport const validateSchema = (form) => {\n    let schema = {};\n    if (form.length > 0) {\n        schema = Object.entries(form[0])\n            .reduce((result, [key, params]) => {\n                const { dataType, required } = params;\n\n                if (!FIELD_TYPES[dataType]) {\n                    return { ...result };\n                }\n\n                let validator = Yup[FIELD_TYPES[dataType]]();\n\n                if (required) {\n                    validator = validator.required('validation.required');\n                }\n\n                return {\n                    ...result,\n                    [key]: validator\n                };\n            }, {});\n    }\n    return Yup.object().shape(schema);\n};\n","// @vendors\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\n// @material-ui\nimport TextField from '@material-ui/core/TextField';\nimport MenuItem from '@material-ui/core/MenuItem';\n\n// @utiles\nimport { DATA_TYPES, FIELD_TYPES } from '../../../../utiles/formHelpers';\n\nconst FormFields = (props) => {\n    const {\n        // Component props\n        attr,\n        error,\n        form,\n        onChange,\n        value,\n        // Formik props\n        setFieldTouched\n    } = props;\n    const {\n        dataType,\n        label,\n        options,\n        readOnly,\n        required\n    } = form[attr];\n\n    const handleBlur = () => {\n        setFieldTouched(attr);\n    };\n\n    const handleChange = (event) => {\n        setFieldTouched(attr);\n        onChange(event);\n    };\n\n    const renderField = () => {\n        if (dataType === DATA_TYPES.STRING || dataType === DATA_TYPES.INTEGER) {\n            const textFieldProps = {\n                name: attr,\n                label,\n                disabled: readOnly,\n                error,\n                onBlur: handleBlur,\n                onChange: handleChange,\n                required,\n                type: FIELD_TYPES[dataType],\n                value\n            };\n\n            if (options && options.length > 0) {\n                return (\n                    <TextField {...textFieldProps} select>\n                        {\n                            options.map(item => (\n                                <MenuItem key={item.value} value={item.value}>{item.label}</MenuItem>\n                            ))\n                        }\n                    </TextField>\n                );\n            }\n\n            return (\n                <TextField {...textFieldProps} />\n            );\n        }\n        return null;\n    };\n\n    return (\n        <>{renderField()}</>\n    );\n};\n\nFormFields.propTypes = {\n    attr: PropTypes.string.isRequired,\n    error: PropTypes.bool,\n    form: PropTypes.shape({}).isRequired,\n    onChange: PropTypes.func.isRequired,\n    setFieldTouched: PropTypes.func.isRequired,\n    value: PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string\n    ]).isRequired\n};\n\nFormFields.defaultProps = {\n    error: false\n};\n\nexport default FormFields;\n","// @vendors\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Formik, Form } from 'formik';\nimport className from 'classnames';\n\n// @material-ui\nimport CardActions from '@material-ui/core/CardActions';\nimport Button from '@material-ui/core/Button';\n\n// @components\nimport FormFields from '../FormFields/FormFields';\n\n// @utiles\nimport {\n    generateValues,\n    submitModelForm,\n    validateSchema\n} from '../../../../utiles/formHelpers';\n\n// @styles\nimport './Form.scss';\n\nconst form = (props) => {\n    const { results } = props;\n\n    return (\n        <Formik\n            enableReinitialize\n            initialValues={generateValues(results)}\n            onSubmit={values => submitModelForm(values, props)}\n            validationSchema={validateSchema(results)}\n        >\n            {({\n                dirty,\n                errors,\n                handleChange,\n                handleReset,\n                isValid,\n                setFieldTouched,\n                submitForm,\n                touched,\n                values\n            }) => {\n                const areButtonsVisible = Object.keys(touched).length > 0 && dirty;\n\n                return (\n                    <Form className=\"form\">\n                        {\n                            Object.keys(values).map((attr, index) => (\n                                <FormFields\n                                    key={index}\n                                    attr={attr}\n                                    error={(touched[attr] && errors[attr]) && !isValid}\n                                    form={results[0]}\n                                    onChange={handleChange}\n                                    setFieldTouched={setFieldTouched}\n                                    value={values[attr]}\n                                />\n                            ))\n                        }\n                        <CardActions\n                            className={className(\n                                'card-actions__form',\n                                { 'card-actions__form--hide': !areButtonsVisible }\n                            )}\n                        >\n                            <Button\n                                color=\"primary\"\n                                disabled={!isValid}\n                                onClick={submitForm}\n                                size=\"small\"\n                                variant=\"contained\"\n                            >\n                                Save\n                            </Button>\n                            <Button\n                                onClick={() => handleReset()}\n                                size=\"small\"\n                            >\n                                Reset\n                            </Button>\n                        </CardActions>\n                    </Form>\n                );\n            }}\n        </Formik>\n    );\n};\n\nform.propTypes = {\n    results: PropTypes.array.isRequired\n};\n\nexport default form;\n","export const REQUEST = 'REQUEST';\nexport const SUCCESS = 'SUCCESS';\nexport const FAILURE = 'FAILURE';\n\nexport function createRequestTypes(base) {\n    if (!base) {\n        throw new Error('cannot create request type with base = \\'\\' or base = null');\n    }\n    return [REQUEST, SUCCESS, FAILURE].reduce((accumulator, type) => {\n        // eslint-disable-next-line no-param-reassign\n        accumulator[type] = `${base}_${type}`;\n        return accumulator;\n    }, {});\n}\n\nexport function createAction(type, payload = {}) {\n    return {\n        type,\n        ...payload\n    };\n}\n","import { createRequestTypes } from './index';\n\n// Form Actions\nexport const GET_FORM_DATA = createRequestTypes('GET_FORM_DATA');\n\n// Quiz Actions\nexport const GET_QUESTIONS = createRequestTypes('GET_QUESTIONS');\nexport const NEXT_QUESTION = 'NEXT_QUESTION';\nexport const GRADE = 'GRADE';\n","// @actionTypes\nimport * as types from '../actionTypes';\nimport {\n    createAction,\n    REQUEST,\n    SUCCESS,\n    FAILURE\n} from '../index';\n\n// @utiles\nimport { generateOptions } from '../../../utiles/helpers';\n\n// @vendors\nconst axios = require('axios');\n\nconst baseURL = 'https://opentdb.com';\n\nexport const formActions = {\n    request: () => createAction(types.GET_FORM_DATA[REQUEST]),\n    success: results => createAction(types.GET_FORM_DATA[SUCCESS], { results }),\n    failure: error => createAction(types.GET_FORM_DATA[FAILURE], { error })\n};\n\nexport const getFormDataAction = () => async (dispatch) => {\n    const URL = `${baseURL}/api_category.php`;\n    try {\n        dispatch(formActions.request());\n        const { data } = await axios.get(URL);\n        const ax = axios.create({\n            baseURL: 'http://robertvarela.com/keep-austin-nerdy'\n        });\n        const res = await ax.get('formData.json');\n        const formData = res.data;\n        formData[0].category = {\n            ...formData[0].category,\n            options: generateOptions(data.trivia_categories)\n        };\n        dispatch(formActions.success(formData));\n    } catch (error) {\n        console.log('Error', error);\n        const { status, statusText } = error.response;\n        dispatch(formActions.failure({ status, statusText }));\n    }\n};\n","// @actionTypes\nimport * as types from '../actionTypes';\nimport {\n    createAction,\n    REQUEST,\n    SUCCESS,\n    FAILURE\n} from '../index';\n\n// @vendors\nconst axios = require('axios');\n\nconst baseURL = 'https://opentdb.com';\n\nexport const quizActions = {\n    request: () => createAction(types.GET_QUESTIONS[REQUEST]),\n    success: data => createAction(types.GET_QUESTIONS[SUCCESS], { data }),\n    failure: error => createAction(types.GET_QUESTIONS[FAILURE], { error })\n};\n\nexport const getQuestionsAction = values => async (dispatch) => {\n    const URL = `${baseURL}/api.php`;\n    try {\n        dispatch(quizActions.request());\n        const { data } = await axios.get(URL, {\n            params: { ...values }\n        });\n        dispatch(quizActions.success(data));\n    } catch (error) {\n        console.log('Error', error);\n        const { status, statusText } = error.response;\n        dispatch(quizActions.failure({ status, statusText }));\n    }\n};\n\nexport const nextQuestionAction = () => async (dispatch) => {\n    dispatch({\n        type: types.NEXT_QUESTION\n    });\n};\n\nexport const gradeAction = () => async (dispatch) => {\n    dispatch({\n        type: types.GRADE\n    });\n};\n","// @vendors\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\n// @components\nimport Card from '../../components/shared/card/Card';\nimport Form from '../../components/shared/form/Form/form';\n\n// @actions\nimport { getFormDataAction } from '../../store/actions/form/form';\nimport { getQuestionsAction } from '../../store/actions/quiz/quiz';\n\n// @utiles\nimport { QUIZ_ROUTE } from '../../utiles/routes';\n\nclass FormContainer extends Component {\n    componentDidMount() {\n        const { getFormDataAction } = this.props;\n        getFormDataAction();\n    }\n\n    handleOnSave = (values) => {\n        const { getQuestionsAction, history } = this.props;\n        getQuestionsAction(values);\n        history.replace(QUIZ_ROUTE);\n    }\n\n    render() {\n        const { form: { error, isFetching, results } } = this.props;\n        return (\n            <Card\n                error={error}\n                isFetching={isFetching}\n                title=\"Start\"\n            >\n                <Form\n                    onSave={this.handleOnSave}\n                    results={results}\n                />\n            </Card>\n        );\n    }\n}\n\nconst mapDispatchToProps = dispatch => ({\n    getFormDataAction: () => dispatch(getFormDataAction()),\n    getQuestionsAction: values => dispatch(getQuestionsAction(values))\n});\n\nconst mapStateToProps = state => ({\n    form: state.form\n});\n\nFormContainer.propTypes = {\n    form: PropTypes.shape({\n        error: PropTypes.shape({}),\n        isFetching: PropTypes.bool,\n        results: PropTypes.array\n    }).isRequired,\n    getFormDataAction: PropTypes.func.isRequired,\n    getQuestionsAction: PropTypes.func.isRequired,\n    history: PropTypes.shape({\n        replace: PropTypes.func\n    }).isRequired\n};\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(FormContainer);\n","// @vendors\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\n// @components\nimport Page from '../Page';\nimport FormContainer from '../../../../containers/Form/Form';\n\nexport const Home = ({ history }) => (\n    <Page>\n        <FormContainer history={history} />\n    </Page>\n);\n\nHome.propTypes = {\n    history: PropTypes.shape({}).isRequired\n};\n\nexport default Home;\n","/* eslint-disable camelcase */\n// @vendors\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport _ from 'lodash';\n\n// @material-ui\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\n\nclass Question extends Component {\n    state = {\n        answers: []\n    }\n\n    componentDidMount() {\n        this.shuffleAnswers();\n    }\n\n    componentDidUpdate(prevProps) {\n        const prevItem = prevProps.item;\n        const { item } = this.props;\n        if (!_.isEqual(prevItem, item)) {\n            this.shuffleAnswers();\n        }\n    }\n\n    shuffleAnswers = () => {\n        const {\n            item: { correct_answer, incorrect_answers }\n        } = this.props;\n        this.setState({\n            answers: _.shuffle(incorrect_answers.concat(correct_answer))\n        });\n    }\n\n    render() {\n        const { answers } = this.state;\n        const {\n            answered,\n            handleAnswer,\n            item: { correct_answer, question }\n        } = this.props;\n\n        return (\n            <>\n                <Typography className=\"question\" variant=\"body1\">{question}</Typography>\n                {\n                    answers.map(answer => (\n                        <Button\n                            key={answer}\n                            disabled={answered}\n                            onClick={() => handleAnswer(answer, correct_answer)}\n                            size=\"small\"\n                            variant=\"outlined\"\n                        >\n                            {answer}\n                        </Button>\n                    ))\n                }\n            </>\n        );\n    }\n}\n\nQuestion.propTypes = {\n    answered: PropTypes.bool.isRequired,\n    handleAnswer: PropTypes.func.isRequired,\n    item: PropTypes.shape({\n        correct_answer: PropTypes.string,\n        incorrect_answers: PropTypes.array,\n        question: PropTypes.string\n    }).isRequired\n};\n\nexport default Question;\n","// @vendors\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport className from 'classnames';\n\n// @material-ui\nimport CheckCircleOutlinedIcon from '@material-ui/icons/CheckCircleOutlined';\nimport CancelOutlinedIcon from '@material-ui/icons/CancelOutlined';\n\n// @styles\nimport './Answer.scss';\n\nconst Answer = (props) => {\n    const { answer, isAnswerCorrect } = props;\n\n    return (\n        <div\n            className={className(\n                'answer',\n                'center-content',\n                { 'answer--correct': isAnswerCorrect }\n            )}\n        >\n            {(isAnswerCorrect) ? <CheckCircleOutlinedIcon /> : <CancelOutlinedIcon />}\n            {answer}\n        </div>\n    );\n};\n\n\nAnswer.propTypes = {\n    answer: PropTypes.string.isRequired,\n    isAnswerCorrect: PropTypes.bool.isRequired\n};\n\nexport default Answer;\n","// @vendors\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\n// @components\nimport Question from '../Question/Question';\nimport Answer from '../Answer/Answer';\n\n// @styles\nimport './Quiz.scss';\n\nconst Quiz = (props) => {\n    const {\n        answer, answered, current, handleAnswer, isAnswerCorrect, results\n    } = props;\n\n    return (\n        <div className=\"quiz\">\n            <Question\n                answered={answered}\n                handleAnswer={handleAnswer}\n                item={results[current]}\n            />\n            { answered\n                && <Answer answer={answer} isAnswerCorrect={isAnswerCorrect} />\n            }\n        </div>\n    );\n};\n\nQuiz.propTypes = {\n    answer: PropTypes.string.isRequired,\n    answered: PropTypes.bool.isRequired,\n    current: PropTypes.number.isRequired,\n    handleAnswer: PropTypes.func.isRequired,\n    isAnswerCorrect: PropTypes.bool.isRequired,\n    results: PropTypes.array.isRequired\n};\n\nexport default Quiz;\n","/* eslint-disable camelcase */\n// @vendors\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport _ from 'lodash';\n\n// @material-ui\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\n\n// @components\nimport Card from '../../components/shared/card/Card';\nimport Quiz from '../../components/quiz/Quiz/Quiz';\nimport HomeLink from '../../components/shared/links/HomeLink/HomeLink';\n\n// @actions\nimport { gradeAction, nextQuestionAction } from '../../store/actions/quiz/quiz';\n\n// @utiles\nimport { RESULTS_ROUTE } from '../../utiles/routes';\n\nconst initialState = {\n    answer: '',\n    answered: false,\n    isAnswerCorrect: false,\n    hideQuiz: true\n};\n\nclass QuizContainer extends Component {\n    state = initialState;\n\n    componentDidUpdate(prevProps) {\n        const prevCurrent = prevProps.quiz.current;\n        const prevResults = prevProps.quiz.results;\n        const { quiz: { current, error, results } } = this.props;\n\n        if (!_.isEqual(prevResults, results)) {\n            // eslint-disable-next-line react/no-did-update-set-state\n            this.setState({\n                hideQuiz: _.isEmpty(results) && _.isEmpty(error)\n            });\n        }\n\n        if (!_.isEqual(prevCurrent, current)) {\n            this.resetState();\n        }\n    }\n\n    resetState = () => {\n        const { hideQuiz } = this.state;\n        this.setState({\n            ...initialState,\n            hideQuiz\n        });\n    }\n\n    handleAnswer = (answer, correct_answer) => {\n        if (answer === correct_answer) {\n            this.handleGrade();\n            this.setState({ isAnswerCorrect: true });\n        }\n\n        this.setState({ answer, answered: true });\n    };\n\n    handleGrade = () => {\n        const { gradeAction } = this.props;\n        gradeAction();\n    };\n\n    handleOnClickNext = () => {\n        const { nextQuestionAction } = this.props;\n        nextQuestionAction();\n    };\n\n    handleOnClickFinish = () => {\n        const { history } = this.props;\n        history.replace(RESULTS_ROUTE);\n    };\n\n    display = () => {\n        const {\n            answer, answered, hideQuiz, isAnswerCorrect\n        } = this.state;\n        const {\n            quiz: { current, response_code, results }\n        } = this.props;\n\n        if (hideQuiz) {\n            return (\n                <div className=\"center-content error\">\n                    {\n                        !_.isEqual(response_code, 0)\n                        && <Typography variant=\"h2\">Try Again</Typography>\n                    }\n                    <HomeLink />\n                </div>\n            );\n        }\n\n        return (\n            <Quiz\n                answer={answer}\n                answered={answered}\n                current={current}\n                handleAnswer={this.handleAnswer}\n                isAnswerCorrect={isAnswerCorrect}\n                results={results}\n            />\n        );\n    };\n\n    diplayButton = () => {\n        const { answered, hideQuiz } = this.state;\n        const { quiz: { current, results } } = this.props;\n        const finish = ((current + 1) === results.length);\n        const buttonProps = {\n            onClick: this.handleOnClickNext,\n            label: 'Next'\n        };\n\n        if (finish) {\n            buttonProps.className = 'card-actions__finish';\n            buttonProps.onClick = this.handleOnClickFinish;\n            buttonProps.label = 'Finish';\n        }\n\n        return (\n            !hideQuiz\n            && (\n                <Button\n                    {...buttonProps}\n                    color=\"primary\"\n                    disabled={!answered}\n                    size=\"small\"\n                    variant=\"contained\"\n                >\n                    {buttonProps.label}\n                </Button>\n            )\n        );\n    };\n\n    render() {\n        const {\n            quiz: {\n                current, error, grade, isFetching, results\n            }\n        } = this.props;\n        const title = (!_.isEmpty(results)) ? results[0].category : 'Quiz';\n        const subheader = (!_.isEmpty(results)) ? `${current + 1} of ${results.length}` : '';\n\n        return (\n            <Card\n                actions={this.diplayButton()}\n                avatar_message={`${grade}%`}\n                error={error}\n                isFetching={isFetching}\n                title={title}\n                subheader={subheader}\n            >\n                {this.display()}\n            </Card>\n        );\n    }\n}\n\nconst mapDispatchToProps = dispatch => ({\n    gradeAction: () => dispatch(gradeAction()),\n    nextQuestionAction: () => dispatch(nextQuestionAction())\n});\n\nconst mapStateToProps = state => ({\n    quiz: state.quiz\n});\n\nQuizContainer.propTypes = {\n    gradeAction: PropTypes.func.isRequired,\n    history: PropTypes.shape({\n        replace: PropTypes.func\n    }).isRequired,\n    nextQuestionAction: PropTypes.func.isRequired,\n    quiz: PropTypes.shape({\n        current: PropTypes.number,\n        error: PropTypes.shape({}),\n        grade: PropTypes.number,\n        isFetching: PropTypes.bool,\n        response_code: PropTypes.number,\n        results: PropTypes.array\n    }).isRequired\n};\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(QuizContainer);\n","// @vendors\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\n// @components\nimport Page from '../Page';\nimport QuizContainer from '../../../../containers/Quiz/Quiz';\n\nexport const Quiz = ({ history }) => (\n    <Page>\n        <QuizContainer history={history} />\n    </Page>\n);\n\nQuiz.propTypes = {\n    history: PropTypes.shape({}).isRequired\n};\n\nexport default Quiz;\n","/* eslint-disable camelcase */\n// @vendors\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport className from 'classnames';\n\n// @material-ui\nimport Typography from '@material-ui/core/Typography';\n\n// @styles\nimport './Results.scss';\n\nconst Results = ({ results }) => (\n    <div className=\"results\">\n        {\n            results.map((item, index) => {\n                const { correct_answer, question } = item;\n                const count = index + 1;\n                return (\n                    <div key={index}>\n                        <div\n                            className={className(\n                                'results__number',\n                                { 'results__number-double': (count > 9) }\n                            )}\n                        >\n                            <Typography variant=\"body2\">{`${count}.`}</Typography>\n                        </div>\n                        <div className=\"results__q-and-a\">\n                            <Typography variant=\"body2\">{question}</Typography>\n                            <Typography className=\"results__answer\" variant=\"body2\">{correct_answer}</Typography>\n                        </div>\n                    </div>\n                );\n            })\n        }\n    </div>\n);\n\nResults.propTypes = {\n    results: PropTypes.array.isRequired\n};\n\nexport default Results;\n","// @vendors\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport _ from 'lodash';\n\n// @components\nimport Card from '../../components/shared/card/Card';\nimport Results from '../../components/Results/Results';\nimport HomeLink from '../../components/shared/links/HomeLink/HomeLink';\n\nconst ResultsContainer = (props) => {\n    const {\n        quiz: {\n            error, grade, isFetching, results\n        }\n    } = props;\n    const hideQuiz = _.isEmpty(results) && _.isEmpty(error);\n    const subheader = (!_.isEmpty(results)) ? results[0].category : '';\n\n    const display = () => {\n        if (hideQuiz) {\n            return (<HomeLink className=\"center-content\" />);\n        }\n\n        return (\n            <Results results={results} />\n        );\n    };\n\n    const diplayButton = () => (\n        !hideQuiz\n            && <HomeLink label=\"Restart\" />\n    );\n\n    return (\n        <Card\n            actions={diplayButton()}\n            avatar_message={`${grade}%`}\n            error={error}\n            isFetching={isFetching}\n            title=\"Results\"\n            subheader={subheader}\n        >\n            {display()}\n        </Card>\n    );\n};\n\nconst mapStateToProps = state => ({\n    quiz: state.quiz\n});\n\nResultsContainer.propTypes = {\n    quiz: PropTypes.shape({\n        error: PropTypes.shape({}),\n        grade: PropTypes.number,\n        isFetching: PropTypes.bool,\n        results: PropTypes.array\n    }).isRequired\n};\n\nexport default connect(\n    mapStateToProps,\n    null\n)(ResultsContainer);\n","// @vendors\nimport React from 'react';\n\n// @components\nimport Page from '../Page';\nimport ResultsContainer from '../../../../containers/Results/Results';\n\nexport const Results = () => (\n    <Page>\n        <ResultsContainer />\n    </Page>\n);\n\nexport default Results;\n","// @vendors\nimport React from 'react';\n\n// @material-ui\nimport Typography from '@material-ui/core/Typography';\n\n// @components\nimport Page from '../Page';\nimport HomeLink from '../../links/HomeLink/HomeLink';\n\n// @styles\nimport './NotFound.scss';\n\nexport const NotFound = () => (\n    <Page>\n        <div className=\"not-found\">\n            <Typography className=\"not-found__title\" variant=\"h2\">Page Not Found</Typography>\n            <HomeLink label=\"Home\" />\n        </div>\n    </Page>\n);\n\nexport default NotFound;\n","// @vendors\nimport React from 'react';\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Route,\n    Redirect\n} from 'react-router-dom';\n\n// @components\nimport Header from '../Header/Header';\nimport Home from '../shared/pages/Home/Home';\nimport Quiz from '../shared/pages/Quiz/Quiz';\nimport Results from '../shared/pages/Results/Results';\nimport NotFound from '../shared/pages/NotFound/NotFound';\n\n// @styles\nimport './App.scss';\n\n// @utiles\nimport * as routes from '../../utiles/routes';\n\nconst App = () => (\n    <div className=\"App\">\n        <Router basename={routes.BASE_ROUTE}>\n            <Header />\n            <Switch>\n                <Route exact path={routes.HOME_ROUTE} component={Home} />\n                <Route exact path={routes.QUIZ_ROUTE} component={Quiz} />\n                <Route exact path={routes.RESULTS_ROUTE} component={Results} />\n                <Route exact path={routes.NOT_FOUND_ROUTE} component={NotFound} />\n                <Redirect to={routes.NOT_FOUND_ROUTE} />\n            </Switch>\n        </Router>\n    </div>\n);\n\nexport default App;\n","// @actionTypes\nimport * as types from '../../actions/actionTypes';\n\n// @utiles\nimport {\n    REQUEST,\n    SUCCESS,\n    FAILURE\n} from '../../actions/index';\n\nexport const initialState = {\n    error: {},\n    isFetching: false,\n    results: []\n};\n\nexport default function reducer(state = initialState, action) {\n    switch (action.type) {\n        case types.GET_FORM_DATA[REQUEST]:\n            return {\n                ...state,\n                isFetching: true\n            };\n        case types.GET_FORM_DATA[SUCCESS]: {\n            const { results } = action;\n            return {\n                ...state,\n                isFetching: false,\n                results\n            };\n        }\n        case types.GET_FORM_DATA[FAILURE]: {\n            const { error } = action;\n            return {\n                ...state,\n                error,\n                isFetching: false\n            };\n        }\n        default:\n            return state;\n    }\n}\n","/* eslint-disable camelcase */\n// @actionTypes\nimport * as types from '../../actions/actionTypes';\n\n// @utiles\nimport {\n    REQUEST,\n    SUCCESS,\n    FAILURE\n} from '../../actions/index';\n\nexport const initialState = {\n    current: 0,\n    error: {},\n    grade: 0,\n    isFetching: false,\n    response_code: 0,\n    results: []\n};\n\nexport default function reducer(state = initialState, action) {\n    switch (action.type) {\n        case types.GET_QUESTIONS[REQUEST]:\n            return {\n                ...initialState,\n                isFetching: true\n            };\n        case types.GET_QUESTIONS[SUCCESS]: {\n            const { response_code, results } = action.data;\n            return {\n                ...state,\n                isFetching: false,\n                response_code,\n                results\n            };\n        }\n        case types.GET_QUESTIONS[FAILURE]: {\n            const { error } = action;\n            return {\n                ...state,\n                error,\n                isFetching: false\n            };\n        }\n        case types.NEXT_QUESTION:\n            return {\n                ...state,\n                current: state.current + 1\n            };\n        case types.GRADE:\n            return {\n                ...state,\n                grade: state.grade + 10\n            };\n        default:\n            return state;\n    }\n}\n","import { combineReducers } from 'redux';\n\nimport form from './form/form';\nimport quiz from './quiz/quiz';\n\nconst rootReducer = combineReducers({\n    form,\n    quiz\n});\n\nexport default rootReducer;\n","// @vendors\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport thunkMiddleware from 'redux-thunk';\nimport { createStore, applyMiddleware } from 'redux';\nimport { Provider } from 'react-redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\n\n// @material-ui\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\n\n// @containers\nimport Root from './components/App/App';\n\n// @reducers\nimport rootReducer from './store/reducers/index';\n\nconst store = createStore(rootReducer, composeWithDevTools(applyMiddleware(thunkMiddleware)));\n\n// Set Material-UI theme\nconst theme = createMuiTheme({\n    palette: {\n        primary: {\n            main: '#81d4fa'\n        }\n    },\n    typography: {\n        useNextVariants: true\n    }\n});\n\nconst App = () => (\n    <MuiThemeProvider theme={theme}>\n        <Root />\n    </MuiThemeProvider>\n);\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}